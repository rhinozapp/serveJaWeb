{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/menu/menu.component.css","webpack:///./src/app/components/menu/menu.component.html","webpack:///./src/app/components/menu/menu.component.ts","webpack:///./src/app/components/my-toolbar/loginDialog.html","webpack:///./src/app/components/my-toolbar/my-toolbar.component.css","webpack:///./src/app/components/my-toolbar/my-toolbar.component.html","webpack:///./src/app/components/my-toolbar/my-toolbar.component.ts","webpack:///./src/app/components/my-toolbar/signUpDialog.html","webpack:///./src/app/components/order/order.component.css","webpack:///./src/app/components/order/order.component.html","webpack:///./src/app/components/order/order.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/table/table.component.css","webpack:///./src/app/components/table/table.component.html","webpack:///./src/app/components/table/table.component.ts","webpack:///./src/app/components/waiter/waiter.component.css","webpack:///./src/app/components/waiter/waiter.component.html","webpack:///./src/app/components/waiter/waiter.component.ts","webpack:///./src/app/default.error-matcher.ts","webpack:///./src/app/models/place.ts","webpack:///./src/app/services/api-service/api-service.service.ts","webpack:///./src/app/services/auth/auth.service.ts","webpack:///./src/app/services/helpers/helpers.service.ts","webpack:///./src/app/services/place/place.service.ts","webpack:///./src/app/services/validators/cnpj.validator.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACM;AACM;AACmB;AACT;AACR;AACQ;AACe;AACT;AACH;AACA;AAElE,IAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE;IACpD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,6EAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAG,sFAAgB,EAAE,WAAW,EAAE,CAAC,qEAAS,CAAC,EAAC;IAC1E,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAG,6EAAa,EAAE,WAAW,EAAE,CAAC,qEAAS,CAAC,EAAC;IACpE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAG,4FAAkB,EAAE,WAAW,EAAE,CAAC,qEAAS,CAAC,EAAC;IAC9E,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAG,mFAAe,EAAE,WAAW,EAAE,CAAC,qEAAS,CAAC,EAAC;IACxE,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAG,gFAAc,EAAE,WAAW,EAAE,CAAC,qEAAS,CAAC,EAAC;IACtE,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAG,iFAAc,EAAE,WAAW,EAAE,CAAC,qEAAS,CAAC,EAAC;IACtE,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE;CACtC,CAAC;AAUF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAR5B,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,4DAAY;gBACZ,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;aAC/B;YACD,OAAO,EAAE,CAAE,4DAAY,CAAE;YACzB,YAAY,EAAE,EAAE;SACnB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AChC7B,mB;;;;;;;;;;;ACAA,uF;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAMI,UAAK,GAAG,KAAK,CAAC;IAClB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACP,QAAQ,EAAE,UAAU;;;SAGvB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACM;AACe;AACJ;AACqB;AAC5B;AAYxB;AACkG;AAC7D;AACa;AACjB;AACa;AAClC;AAC2B;AACxB;AAC2C;AACxC;AACY;AACe;AACP;AACA;AACe;AACZ;AACG;AACH;AAmEpE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAjErB,8DAAQ,CAAC;YACN,YAAY,EAAE;gBACV,2DAAY;gBACZ,8FAAkB;gBAClB,gGAAoB;gBACpB,iGAAqB;gBACrB,uFAAgB;gBAChB,8EAAa;gBACb,8EAAa;gBACb,6FAAkB;gBAClB,iFAAc;gBACd,oFAAe;gBACf,iFAAc;aACjB;YACD,eAAe,EAAG;gBACd,gGAAoB;gBACpB,iGAAqB;aACxB;YACD,OAAO,EAAE;gBACL,uEAAa;gBACb,2EAAmB,CAAC,QAAQ,CAAC,iBAAiB,EAAE,EAAE,OAAO,EAAE,qEAAW,CAAC,UAAU,EAAE,CAAC;gBACpF,4FAAuB;gBACvB,gEAAY;gBACZ,kEAAgB;gBAChB,iEAAe;gBACf,kEAAgB;gBAChB,+DAAa;gBACb,+DAAa;gBACb,iEAAe;gBACf,gEAAc;gBACd,iEAAe;gBACf,iEAAe;gBACf,mEAAiB;gBACjB,+DAAa;gBACb,mEAAiB;gBACjB,0DAAW;gBACX,kEAAmB;gBACnB,sEAAgB;gBAChB,uDAAa,CAAC,OAAO,EAAE;gBACvB,wDAAa,CAAC,OAAO,CAAC;oBAClB,SAAS,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC;oBACjC,QAAQ,EAAE,IAAI;oBACd,MAAM,EAAG,yCAAyC;iBACrD,CAAC;gBACF,6DAAS,CAAC,OAAO,CAAC;oBACd,MAAM,EAAG,EAAE,WAAW,EAAG,cAAM,mBAAY,CAAC,OAAO,CAAC,OAAO,CAAC,EAA7B,CAA6B,EAAE;iBACjE,CAAC;gBACF,qEAAgB;aACnB;YACD,OAAO,EAAG,EAAE;YACZ,SAAS,EAAE;gBACP,mEAAiB;gBACjB,4FAAiB;gBACjB,2EAAY;gBACZ,iFAAc;gBACd,wEAAW;gBACX,sEAAS;gBACT;oBACI,OAAO,EAAE,uEAAiB;oBAC1B,QAAQ,EAAE,4EAAe;oBACzB,KAAK,EAAE,IAAI;iBACd;aACJ;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC5B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACvGtB,mB;;;;;;;;;;;ACAA,+gB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEI;QADO,eAAU,GAAY,CAAC,CAAC;IAChB,CAAC;IAEhB,qCAAQ,GAAR;QACI,IAAI,CAAC,UAAU,GAAG,CAAC,MAAM,CAAC,UAAU,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,qCAAQ,GAAR,UAAS,KAAK;QACV,IAAI,CAAC,UAAU,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,CAAC;IAVQ,kBAAkB;QAL9B,+DAAS,CAAC;YACP,QAAQ,EAAE,eAAe;;;SAG5B,CAAC;;OACW,kBAAkB,CAW9B;IAAD,yBAAC;CAAA;AAX8B;;;;;;;;;;;;ACP/B,oDAAoD,uBAAuB,EAAE,4BAA4B,kBAAkB,EAAE,6BAA6B,kCAAkC,wBAAwB,EAAE,EAAE,+BAA+B,yBAAyB,qBAAqB,kEAAkE,6BAA6B,EAAE,6BAA6B,qCAAqC,yBAAyB,EAAE,EAAE,6CAA6C,uBAAuB,oBAAoB,uBAAuB,2BAA2B,2BAA2B,sCAAsC,iBAAiB,gBAAgB,qBAAqB,uDAAuD,+CAA+C,EAAE,6BAA6B,qDAAqD,0BAA0B,EAAE,EAAE,6BAA6B,qDAAqD,2BAA2B,+BAA+B,iCAAiC,EAAE,EAAE,8BAA8B,qDAAqD,0BAA0B,EAAE,EAAE,8BAA8B,qDAAqD,0BAA0B,EAAE,EAAE,eAAe,oBAAoB,gBAAgB,EAAE,6BAA6B,mBAAmB,2BAA2B,EAAE,EAAE,8BAA8B,uBAAuB,EAAE,8BAA8B,uBAAuB,uBAAuB,EAAE,6BAA6B,oCAAoC,wBAAwB,EAAE,EAAE,mDAAmD,mBAAmB,4BAA4B,EAAE,6BAA6B,2DAA2D,wBAAwB,EAAE,EAAE,mDAAmD,2BAA2B,mBAAmB,yBAAyB,uCAAuC,iBAAiB,mBAAmB,EAAE,6BAA6B,2DAA2D,+BAA+B,wBAAwB,mBAAmB,gCAAgC,EAAE,EAAE,oCAAoC,yBAAyB,uBAAuB,0BAA0B,EAAE,wDAAwD,qBAAqB,oBAAoB,4BAA4B,EAAE,6BAA6B,gEAAgE,2BAA2B,wBAAwB,gCAAgC,EAAE,EAAE,qEAAqE,0BAA0B,EAAE,0EAA0E,yBAAyB,yBAAyB,EAAE,kFAAkF,2BAA2B,4BAA4B,yBAAyB,EAAE,kFAAkF,4BAA4B,EAAE,kCAAkC,qBAAqB,0BAA0B,wBAAwB,EAAE,kCAAkC,uBAAuB,wBAAwB,0BAA0B,EAAE,kCAAkC,4BAA4B,yBAAyB,EAAE,yDAAyD,qBAAqB,EAAE,YAAY,qBAAqB,oBAAoB,EAAE,4BAA4B,qBAAqB,0BAA0B,wBAAwB,EAAE,0BAA0B,uBAAuB,EAAE,mCAAmC,QAAQ,mBAAmB,iBAAiB,EAAE,UAAU,gBAAgB,iBAAiB,EAAE,EAAE,2BAA2B,QAAQ,mBAAmB,iBAAiB,EAAE,UAAU,gBAAgB,iBAAiB,EAAE,EAAE,mD;;;;;;;;;;;ACA1/H,iyJ;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IACI;IAAe,CAAC;IAEhB,gCAAQ,GAAR,cAAY,CAAC;IAHJ,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAIzB;IAAD,oBAAC;CAAA;AAJyB;;;;;;;;;;;;ACP1B,mB;;;;;;;;;;;ACAA,6C;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;ACP1B,0GAA0G,OAAO,8xD;;;;;;;;;;;ACAjH,8DAA8D,oBAAoB,EAAE,sBAAsB,mBAAmB,EAAE,mBAAmB,gBAAgB,EAAE,8BAA8B,gBAAgB,EAAE,aAAa,kBAAkB,EAAE,aAAa,iBAAiB,EAAE,0BAA0B,qBAAqB,EAAE,iBAAiB,6BAA6B,EAAE,6BAA6B,qBAAqB,+BAA+B,EAAE,qBAAqB,+BAA+B,EAAE,EAAE,yD;;;;;;;;;;;ACAjgB,iuG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMuB;AACoD;AACX;AACgC;AAChC;AACvB;AAC6B;AAEC;AACZ;AACE;AACtB;AASvC;IACI,4BAAoB,OAAkB,EAClB,YAA0B;QAD1B,YAAO,GAAP,OAAO,CAAW;QAClB,iBAAY,GAAZ,YAAY,CAAc;IAAG,CAAC;IAElD,4CAAe,GAAf;QACI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,EAAE;YACpC,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAE;YACR,YAAY,EAAG,IAAI;SACtB,CAAC;aACG,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM,IAAK,CAAC,CAAC,CAAC;IAC/C,CAAC;IAED,6CAAgB,GAAhB;QACI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,EAAE;YACrC,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAE;YACR,YAAY,EAAG,IAAI;SACtB,CAAC;aACG,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM,IAAK,CAAC,CAAC,CAAC;IAC/C,CAAC;IApBQ,kBAAkB;QAN9B,+DAAS,CAAC;YACP,QAAQ,EAAE,gBAAgB;;;YAG1B,aAAa,EAAG,+DAAiB,CAAC,IAAI;SACzC,CAAC;yCAE+B,2DAAS;YACH,uEAAW;OAFrC,kBAAkB,CAqB9B;IAAD,yBAAC;CAAA;AArB8B;AA2B/B;IAOI,8BACW,SAA6C,EACpB,IAAS,EACzC,WAAyB,EACjB,aAA4B,EAC5B,YAA0B,EAC1B,OAAgB,EAChB,OAAgB;QANjB,cAAS,GAAT,SAAS,CAAoC;QACpB,SAAI,GAAJ,IAAI,CAAK;QAEjC,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,YAAO,GAAP,OAAO,CAAS;QAChB,YAAO,GAAP,OAAO,CAAS;QAb5B,YAAO,GAAG,IAAI,0EAAmB,EAAE,CAAC;QAchC,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC;YAC7B,KAAK,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACxB,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,KAAK;aACnB,CAAC;YACF,QAAQ,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC3B,yDAAU,CAAC,QAAQ;aACtB,CAAC;SACL,CAAC,CAAC;IACP,CAAC;IAED,wCAAS,GAAT;QACI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IAED,0CAAW,GAAX;QAAA,iBAKC;QAJG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC;aACjD,SAAS,CAAC,UAAC,IAAU;YAClB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;QAC3C,CAAC,CAAC,CAAC;IACX,CAAC;IAnCQ,oBAAoB;QAJhC,+DAAS,CAAC;YACP,QAAQ,EAAE,cAAc;;SAE3B,CAAC;QAUO,uEAAM,CAAC,iEAAe,CAAC;yCADN,8DAAY,UAEhB,0DAAW;YACD,0EAAY;YACb,uEAAW;YAChB,uDAAM;YACN,oDAAM;OAdnB,oBAAoB,CAoChC;IAAD,2BAAC;CAAA;AApCgC;AA2CjC;IA8CI,+BACW,SAA8C,EACrB,IAAS,EACzC,WAAyB,EACjB,aAA4B,EAC5B,QAAyB,EACzB,YAA0B;QAL3B,cAAS,GAAT,SAAS,CAAqC;QACrB,SAAI,GAAJ,IAAI,CAAK;QAEjC,kBAAa,GAAb,aAAa,CAAe;QAC5B,aAAQ,GAAR,QAAQ,CAAiB;QACzB,iBAAY,GAAZ,YAAY,CAAc;QAnDtC,YAAO,GAAG,IAAI,0EAAmB,EAAE,CAAC;QAE5B,WAAM,GAAW,IAAI,mDAAK,EAAE,CAAC;QAC9B,cAAS,GAAmB;YAC/B,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;SACP,CAAC;QAMK,SAAI,GAAa,IAAI,CAAC;QACtB,UAAK,GAAa,IAAI,CAAC;QAc1B,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC;YAC7B,SAAS,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC5B,yDAAU,CAAC,QAAQ;aACtB,CAAC;YACF,KAAK,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACxB,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,KAAK;aACnB,CAAC;YACF,QAAQ,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC3B,yDAAU,CAAC,OAAO,CAAC;oBACf,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;iBAC1B,CAAC;aACL,CAAC;YACF,cAAc,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACjC,yDAAU,CAAC,QAAQ;gBACnB,IAAI,CAAC,aAAa;aACrB,CAAC;YACF,IAAI,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACvB,yDAAU,CAAC,QAAQ;gBACnB,iFAAa,CAAC,SAAS;aAC1B,CAAC;YACF,OAAO,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC1B,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;aAC1B,CAAC;YACF,MAAM,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACzB,yDAAU,CAAC,QAAQ;aACtB,CAAC;YACF,MAAM,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YAChC,UAAU,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YACpC,YAAY,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC/B,yDAAU,CAAC,QAAQ;aACtB,CAAC;YACF,IAAI,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACvB,yDAAU,CAAC,QAAQ;aACtB,CAAC;YACF,KAAK,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,EAAE,CAAC;SAClC,CAAC,CAAC;IACP,CAAC;IAED,wCAAQ,GAAR;QACI,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,yCAAS,GAAT;QACI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IAED,4CAAY,GAAZ;QAAA,iBAgBC;QAfG,IAAI,CAAC,mBAAmB,EAAE;aACrB,SAAS,CAAC,UAAC,OAAa;YACrB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;gBAChB,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC;oBACrC,QAAQ,EAAG,IAAI;iBAClB,CAAC,EAAE,KAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAEtC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;oBAChB,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC;wBACtC,SAAS,EAAG,IAAI;qBACnB,CAAC,EAAE,KAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oBAEvC,KAAI,CAAC,qBAAqB,EAAE,CAAC;QAEzC,CAAC,EAAE,cAAM,YAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,kCAAkC,EAAE,IAAI,CAAC,EAApE,CAAoE,CAAC,CAAC;IACvF,CAAC;IAED,qDAAqB,GAArB;QAAA,iBAKC;QAJG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;aAClC,SAAS,CAAC,cAAI;YACX,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;QAC3C,CAAC,CAAC;IACV,CAAC;IAED,mDAAmB,GAAnB;QACI,MAAM,CAAC,kFAAQ,CAAC;YACZ,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACjD,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;SACtD,CAAC,CAAC;IACP,CAAC;IAED,6CAAa,GAAb;QAAA,iBAuBC;QAtBG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;aACzC,SAAS,CAAC,UAAC,KAAW;YACnB,KAAI,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC;YAEvF,KAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC;iBAC5C,SAAS,CAAC,eAAK;gBACZ,KAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;gBACtC,+CAA+C;gBAC/C,KAAI,CAAC,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC;gBACxC,KAAI,CAAC,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,UAAU,CAAC;gBACpC,KAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC;YAEjC,CAAC,EAAE;gBACC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC;oBACvC,OAAO,EAAG,IAAI;iBACjB,CAAC,CAAC;YACP,CAAC,CAAC;QACV,CAAC,EAAE;YACC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC;gBACvC,OAAO,EAAG,IAAI;aACjB,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACX,CAAC;IAED,6CAAa,GAAb,UAAc,KAAsB;QAChC,MAAM,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAa,KAAK,CAAC,IAAK,CAAC,QAAQ,CAAC,CAAC;YACrD,IAAI,CAAC,CAAC;YACN,KAAK,CAAC,KAAK,KAAiB,KAAK,CAAC,IAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAC7D,EAAC,kBAAkB,EAAG,IAAI,EAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC;IACjB,CAAC;IAED,4CAAY,GAAZ;QAAA,iBAoBC;QAnBG,IAAI,CAAC,aAAa,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE;YAC1F,KAAK,EAAE,CAAC,eAAe,CAAC;YACxB,qBAAqB,EAAE;gBACnB,OAAO,EAAE,IAAI;aAChB;SACJ,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,eAAe,EAAE;YAC5C,IAAI,KAAK,GAAmC,KAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;YAE1E,KAAI,CAAC,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC;YAEnC,KAAK,CAAC,kBAAkB,CAAC,KAAK,CAAC,kBAAkB,CAAC,MAAM,GAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;gBACpE,CAAC,KAAI,CAAC,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC,kBAAkB,CAAC,KAAK,CAAC,kBAAkB,CAAC,MAAM,GAAE,CAAC,CAAC;qBAC9E,SAAS;qBACT,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,KAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAEzD,KAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QACrC,CAAC,CAAC,CAAC;IACP,CAAC;IAlJoB;QAApB,+DAAS,CAAC,QAAQ,CAAC;kCAA0B,wDAAU;mEAAC;IACrC;QAAnB,+DAAS,CAAC,OAAO,CAAC;kCAAe,wDAAU;wDAAC;IAC1B;QAAlB,+DAAS,CAAC,MAAM,CAAC;kCAAc,wDAAU;uDAAC;IA3ClC,qBAAqB;QALjC,+DAAS,CAAC;YACP,QAAQ,EAAE,gBAAgB;;;SAG7B,CAAC;QAiDO,uEAAM,CAAC,iEAAe,CAAC;yCADN,8DAAY,UAEhB,0DAAW;YACD,0EAAY;YACjB,gFAAc;YACV,uEAAW;OApD7B,qBAAqB,CA4LjC;IAAD,4BAAC;CAAA;AA5LiC;;;;;;;;;;;;AChGlC,yIAAyI,OAAO,k5EAAk5E,wCAAwC,o7BAAo7B,yCAAyC,o4JAAo4J,MAAM,6Y;;;;;;;;;;;ACAj7Q,mB;;;;;;;;;;;ACAA,8C;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IALU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;ACP3B,mB;;;;;;;;;;;ACAA,gD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,mCAAQ,GAAR;IACA,CAAC;IALU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;;OACW,gBAAgB,CAO5B;IAAD,uBAAC;CAAA;AAP4B;;;;;;;;;;;;ACP7B,mB;;;;;;;;;;;ACAA,8C;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IALU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;ACP3B,mB;;;;;;;;;;;ACAA,+C;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IACI;IAAgB,CAAC;IAEjB,kCAAQ,GAAR,cAAY,CAAC;IAHJ,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAI3B;IAAD,sBAAC;CAAA;AAJ2B;;;;;;;;;;;;;;ACJ5B;AAAA,oDAAoD;AACpD;IAAA;IAIA,CAAC;IAHG,0CAAY,GAAZ,UAAa,OAA2B,EAAE,IAAwC;QAC9E,MAAM,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAC9E,CAAC;IACL,0BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;ACRD;AAAA;IAAA;IA2BA,CAAC;IAAD,YAAC;AAAD,CAAC;;AAED;IACI,uBACI,MAAgB,EAChB,SAAkB,EAClB,OAAgB,EAChB,IAAa;IAAE,CAAC;IACxB,oBAAC;AAAD,CAAC;;AAED;IACI,kBAAY,WAAgB;IAAE,CAAC;IACnC,eAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvC0C;AACK;AAGhD;IAGI,2BAAmB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF3B,SAAI,GAAY,mBAAmB,CAAC;IAEN,CAAC;IAEvC,sBAAI,kCAAG;aAAP;YACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;;;OAAA;IAPQ,iBAAiB;QAD7B,gEAAU,EAAE;yCAIgB,+DAAU;OAH1B,iBAAiB,CAQ7B;IAAD,wBAAC;CAAA;AAR6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJa;AAE2D;AACjC;AAEtB;AACW;AACN;AACA;AACW;AAG/D;IACI,qBAAoB,WAA+B,EAC/B,KAAkB,EAClB,QAAyB,EACzB,iBAAoC,EACpC,OAAe;QAJf,gBAAW,GAAX,WAAW,CAAoB;QAC/B,UAAK,GAAL,KAAK,CAAa;QAClB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,YAAO,GAAP,OAAO,CAAQ;IAAI,CAAC;IAExC,6BAAO,GAAP,UAAQ,KAAK,EAAE,QAAQ;QAAvB,iBAWC;QAVG,MAAM,CAAC,IAAI,CAAC,KAAK;aACZ,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,aAAa,EAAE,EAAC,KAAK,SAAE,QAAQ,YAAC,CAAC;aAC7D,IAAI,CACD,0DAAG,CAAC,UAAC,IAAU;YACX,IAAI,CAAC,MAAM,CAAC,CAAC;gBACT,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;gBACvB,sFAAU,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;QACnE,CAAC,CAAC,EACF,iEAAU,CAAC,cAAY,YAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,kCAAkC,EAAE,IAAI,CAAC,EAApE,CAAoE,CAAC,CAC/F,CAAC;IACV,CAAC;IAED,8BAAQ,GAAR,UAAS,KAAa;QAAtB,iBAWC;QAVG,MAAM,CAAC,IAAI,CAAC,KAAK;aACZ,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,cAAc,EAAE,EAAC,KAAK,SAAC,CAAC;aACpD,IAAI,CACD,0DAAG,CAAC,UAAC,IAAU;YACX,IAAI,CAAC,MAAM,CAAC,CAAC;gBACT,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;gBACvB,sFAAU,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;QACnE,CAAC,CAAC,EACF,iEAAU,CAAC,cAAY,YAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,kCAAkC,EAAE,IAAI,CAAC,EAApE,CAAoE,CAAC,CAC/F,CAAC;IACV,CAAC;IAED,gCAAU,GAAV,UAAW,UAAU;QACjB,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QAChD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,8BAAQ,GAAR;QACI,MAAM,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IACjF,CAAC;IAED,mCAAa,GAAb;QACI,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,4BAAM,GAAN;QACI,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACjC,CAAC;IAjDQ,WAAW;QADvB,gEAAU,EAAE;yCAEyB,kFAAiB;YACvB,+DAAU;YACP,uEAAc;YACL,mEAAgB;YAC3B,sDAAM;OAL1B,WAAW,CAkDvB;IAAD,kBAAC;CAAA;AAlDuB;AAqDxB;IAAA;IAYA,CAAC;IAXG,mCAAS,GAAT,UAAU,GAAqB,EACrB,IAAiB;QAEvB,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YAElC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC;gBAClB,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;aACvF,CAAC,CAAC,CAAC,CAAC;YAEL,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IAXQ,eAAe;QAD3B,gEAAU,EAAE;OACA,eAAe,CAY3B;IAAD,sBAAC;CAAA;AAZ2B;AAe5B;IAEI,mBAAoB,KAAkB,EAClB,OAAe;QADf,UAAK,GAAL,KAAK,CAAa;QAClB,YAAO,GAAP,OAAO,CAAQ;IAAG,CAAC;IAEvC,+BAAW,GAAX;QACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,KAAK,CAAC,CAAC;IACvE,CAAC;IAPQ,SAAS;QADrB,gEAAU,EAAE;yCAGkB,WAAW;YACT,sDAAM;OAH1B,SAAS,CAQrB;IAAD,gBAAC;CAAA;AARqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChFmB;AACO;AAEL;AAEG;AAG9C;IAGI,wBAAoB,KAAkB,EACnB,QAAqB;QADpB,UAAK,GAAL,KAAK,CAAa;QACnB,aAAQ,GAAR,QAAQ,CAAa;QAHxC,aAAQ,GAAyB,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAGjB,CAAC;IAE5C;;QAEI;IACJ,gCAAO,GAAP,UAAQ,MAA0B;QAAlC,iBAeC;QAdG,MAAM,CAAC,0DAAU,CAAC,MAAM,CAAC,UAAC,QAAgD;YACtE,uDAAuD;YACvD,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,CACxC,UAAC,OAAqC,EAAE,MAAkC;gBACtE,EAAE,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC3C,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACvB,QAAQ,CAAC,QAAQ,EAAE,CAAC;gBACxB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,OAAO,CAAC,GAAG,CAAC,6CAA6C,GAAG,MAAM,CAAC,CAAC;oBACpE,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,CACL,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oCAAW,GAAX,UAAY,OAAe;QAA3B,iBAcC;QAbG,MAAM,CAAC,0DAAU,CAAC,MAAM,CAAC,UAAC,QAAgD;YACtE,uDAAuD;YACvD,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,CACxC,UAAC,OAAqC,EAAE,MAAkC;gBACtE,EAAE,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC3C,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACvB,QAAQ,CAAC,QAAQ,EAAE,CAAC;gBACxB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,CACL,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2CAAkB,GAAlB;QACI,MAAM,CAAC,0DAAU,CAAC,MAAM,CAAC,UAAC,QAA4B;YAClD,wDAAwD;YACxD,SAAS,CAAC,WAAW,CAAC,kBAAkB,CACpC,UAAC,QAAkB;gBACf,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACxB,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACxB,CAAC,EACD,UAAC,KAAoB;gBACjB,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;gBACrD,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC1B,CAAC,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;QAEI;IACJ,uCAAc,GAAd,UAAe,OAAO;QAClB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,2BAA2B,GAAC,OAAO,GAAC,QAAQ,CAAC,CAAC;IACxE,CAAC;IAED;;QAEI;IACJ,qCAAY,GAAZ,UAAa,OAAgB,EAAE,MAAc;QACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE;YAChC,QAAQ,EAAE,IAAI;SACjB,CAAC,CAAC;IACP,CAAC;IAxEQ,cAAc;QAD1B,gEAAU,EAAE;yCAImB,+DAAU;YACT,6DAAW;OAJ/B,cAAc,CAyE1B;IAAD,qBAAC;CAAA;AAzE0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRgB;AAC0B;AACrB;AAIhD;IACI,sBAAoB,WAA+B,EAC/B,KAAkB;QADlB,gBAAW,GAAX,WAAW,CAAoB;QAC/B,UAAK,GAAL,KAAK,CAAa;IAAG,CAAC;IAE1C,mCAAY,GAAZ,UAAa,IAAI;QACb,MAAM,CAAC,IAAI,CAAC,KAAK;aACZ,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,oBAAoB,EAAE,EAAC,IAAI,QAAC,CAAC,CAAC;IACnE,CAAC;IAED,oCAAa,GAAb,UAAc,KAAK;QACf,MAAM,CAAC,IAAI,CAAC,KAAK;aACZ,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,qBAAqB,EAAE,EAAC,KAAK,SAAC,CAAC,CAAC;IACrE,CAAC;IAZQ,YAAY;QADxB,gEAAU,EAAE;yCAEyB,kFAAiB;YACvB,+DAAU;OAF7B,YAAY,CAaxB;IAAD,mBAAC;CAAA;AAbwB;;;;;;;;;;;;;;ACJzB;AAAA;IAAA;IA6DA,CAAC;IA5DU,uBAAS,GAAhB,UAAiB,KAAkB;QAC/B,IAAM,kBAAkB,GAAG,SAAS,CAAC;QACrC,IAAM,iBAAiB,GAAG,QAAQ,CAAC;QACnC,IAAM,SAAS,GAAG;YACd,gBAAgB;YAChB,gBAAgB;YAChB,gBAAgB;YAChB,gBAAgB;YAChB,gBAAgB;YAChB,gBAAgB;YAChB,gBAAgB;YAChB,gBAAgB;YAChB,gBAAgB;YAChB,gBAAgB;SACnB,CAAC;QACF,IAAM,QAAQ,GAAG,UAAU,MAAM,EAAE,MAAM;YACrC,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,iBAAiB,CAAC;YAC9D,MAAM,CAAC,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACxD,CAAC,CAAC;QACF,IAAM,aAAa,GAAG,UAAS,OAAO;YAClC,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,IAAM,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,UAAS,MAAM,EAAE,MAAM;gBAC5D,MAAM,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACjD,CAAC,EAAE,EAAE,CAAC,CAAC;YAEP,IAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,UAAS,MAAM,EAAE,MAAM;gBAC9C,MAAM,IAAI,MAAM,GAAG,KAAK,CAAC;gBACzB,KAAK,GAAG,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBACtC,MAAM,CAAC,MAAM,CAAC;YAClB,CAAC,EAAE,CAAC,CAAC,CAAC;YAEN,IAAM,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;YACrB,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;QACpC,CAAC,CAAC;QAEF,uBAAuB;QACvB,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC,CAAC,EAAE,SAAS,EAAG,IAAI,EAAE,CAAC,CAAC;QAClC,CAAC;QAED,0BAA0B;QAC1B,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,CAAC,EAAE,SAAS,EAAG,IAAI,EAAE,CAAC,CAAC;QAClC,CAAC;QAED,4BAA4B;QAC5B,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,CAAC,EAAE,SAAS,EAAG,IAAI,EAAE,CAAC,CAAC;QAClC,CAAC;QAED,IAAI,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACtD,OAAO,IAAI,aAAa,CAAC,OAAO,CAAC,CAAC;QAClC,OAAO,IAAI,aAAa,CAAC,OAAO,CAAC,CAAC;QAElC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;YACX,IAAI,CAAC,CAAC;YACN,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzD,IAAI,CAAC,CAAC;gBACN,EAAE,SAAS,EAAG,IAAI,EAAE,CAAC;IACjC,CAAC;IACL,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;AC/DD;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ProfileComponent} from \"./components/profile/profile.component\";\nimport {HomeComponent} from \"./components/home/home.component\";\nimport {AuthGuard} from \"./services/auth/auth.service\";\nimport {MenuComponent} from \"./components/menu/menu.component\";\nimport {DashboardComponent} from \"./components/dashboard/dashboard.component\";\nimport {WaiterComponent} from \"./components/waiter/waiter.component\";\nimport {TableComponent} from \"./components/table/table.component\";\nimport {OrderComponent} from \"./components/order/order.component\";\n\nconst routes: Routes = [\n    { path: '', redirectTo: '/home', pathMatch: 'full' },\n    { path: 'home', component: HomeComponent },\n    { path: 'profile', component : ProfileComponent, canActivate: [AuthGuard]},\n    { path: 'menu', component : MenuComponent, canActivate: [AuthGuard]},\n    { path: 'dashboard', component : DashboardComponent, canActivate: [AuthGuard]},\n    { path: 'waiter', component : WaiterComponent, canActivate: [AuthGuard]},\n    { path: 'table', component : TableComponent, canActivate: [AuthGuard]},\n    { path: 'order', component : OrderComponent, canActivate: [AuthGuard]},\n    { path: '**', redirectTo: '/home' }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forRoot(routes)\n    ],\n    exports: [ RouterModule ],\n    declarations: []\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<app-my-toolbar></app-my-toolbar>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport {\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatDialogModule,\n    MatInputModule,\n    ErrorStateMatcher,\n    MatOptionModule,\n    MatSelectModule, MatSnackBarModule, MatMenuModule, MatGridListModule\n} from '@angular/material';\nimport {LoginDialogComponent, MyToolbarComponent, SignUpDialogComponent} from './components/my-toolbar/my-toolbar.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {ApiServiceService} from \"./services/api-service/api-service.service\";\nimport {PlaceService} from \"./services/place/place.service\";\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\nimport {NgxMaskModule} from \"ngx-mask\";\nimport {HelpersService} from \"./services/helpers/helpers.service\";\nimport { AgmCoreModule } from '@agm/core';\nimport {AuthGuard, AuthInterceptor, AuthService} from \"./services/auth/auth.service\";\nimport {JwtModule} from \"@auth0/angular-jwt\";\nimport { AppRoutingModule } from './/app-routing.module';\nimport {ProfileComponent} from \"./components/profile/profile.component\";\nimport { HomeComponent } from './components/home/home.component';\nimport { MenuComponent } from './components/menu/menu.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { TableComponent } from './components/table/table.component';\nimport { WaiterComponent } from './components/waiter/waiter.component';\nimport { OrderComponent } from './components/order/order.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        MyToolbarComponent,\n        LoginDialogComponent,\n        SignUpDialogComponent,\n        ProfileComponent,\n        HomeComponent,\n        MenuComponent,\n        DashboardComponent,\n        TableComponent,\n        WaiterComponent,\n        OrderComponent\n    ],\n    entryComponents : [\n        LoginDialogComponent,\n        SignUpDialogComponent\n    ],\n    imports: [\n        BrowserModule,\n        ServiceWorkerModule.register('/ngsw-worker.js', { enabled: environment.production }),\n        BrowserAnimationsModule,\n        LayoutModule,\n        MatToolbarModule,\n        MatButtonModule,\n        MatSidenavModule,\n        MatIconModule,\n        MatListModule,\n        MatDialogModule,\n        MatInputModule,\n        MatSelectModule,\n        MatOptionModule,\n        MatSnackBarModule,\n        MatMenuModule,\n        MatGridListModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        NgxMaskModule.forRoot(),\n        AgmCoreModule.forRoot({\n            libraries: ['geometry', 'places'],\n            language: 'pt',\n            apiKey : 'AIzaSyDrgnxO_sSTLTfGWcP1rI2XgOGBfk-4wV0'\n        }),\n        JwtModule.forRoot({\n            config : { tokenGetter : () => localStorage.getItem('token') }\n        }),\n        AppRoutingModule\n    ],\n    exports : [],\n    providers: [\n        ErrorStateMatcher,\n        ApiServiceService,\n        PlaceService,\n        HelpersService,\n        AuthService,\n        AuthGuard,\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: AuthInterceptor,\n            multi: true\n        }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<mat-grid-list [cols]=\\\"breakpoint\\\" rowHeight=\\\"2:1\\\" (window:resize)=\\\"onResize($event)\\\">\\n    <mat-grid-tile [colspan]=\\\"breakpoint\\\">\\n        Card Profile\\n    </mat-grid-tile>\\n    <mat-grid-tile>\\n        Chart 1 - Top Waiter amount\\n    </mat-grid-tile>\\n    <mat-grid-tile>\\n        Top products - Ranking\\n    </mat-grid-tile>\\n    <mat-grid-tile>\\n        Chart 2 - Top Waiter money\\n    </mat-grid-tile>\\n    <mat-grid-tile>\\n        Top order - Ranking\\n    </mat-grid-tile>\\n</mat-grid-list>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n    public breakpoint : number = 2;\n    constructor() {}\n\n    ngOnInit() {\n        this.breakpoint = (window.innerWidth <= 800) ? 1 : 2;\n    }\n\n    onResize(event) {\n        this.breakpoint = (event.target.innerWidth <= 800) ? 1 : 2;\n    }\n}\n","module.exports = \"/*Variable*/\\n/*home*/\\n.welcome {\\n  position: relative; }\\n.welcome .welcome__video {\\n    width: 100%; }\\n@media (max-width: 980px) {\\n      .welcome .welcome__video {\\n        display: none; } }\\n.welcome .welcom__bg-mobile {\\n    position: relative;\\n    display: block;\\n    background: url(/assets/img/index-welcome-bg.jpg) no-repeat;\\n    background-size: cover; }\\n@media (max-width: 980px) {\\n      .welcome .welcom__bg-mobile {\\n        display: block; } }\\n.welcome .welcom__bg-mobile .welcome__msg {\\n      font-size: 4em;\\n      color: #fff;\\n      display: block;\\n      text-align: center;\\n      position: absolute;\\n      text-shadow: 1px 1px 1px #000;\\n      right: 0;\\n      left: 0;\\n      margin: auto;\\n      -webkit-animation: text-appears 3s ease-in-out;\\n      animation: text-appears 3s ease-in-out; }\\n@media (min-width: 980px) {\\n        .welcome .welcom__bg-mobile .welcome__msg {\\n          bottom: 190px; } }\\n@media (max-width: 980px) {\\n        .welcome .welcom__bg-mobile .welcome__msg {\\n          font-size: 2em;\\n          position: relative;\\n          padding: 40% 0 30% 0; } }\\n@media (min-width: 1125px) {\\n        .welcome .welcom__bg-mobile .welcome__msg {\\n          bottom: 280px; } }\\n@media (min-width: 1200px) {\\n        .welcome .welcom__bg-mobile .welcome__msg {\\n          bottom: 320px; } }\\n.who-are-we {\\n  padding: 20px 0;\\n  clear: both; }\\n@media (max-width: 980px) {\\n    .who-are-we {\\n      text-align: center; } }\\n.who-are-we:nth-of-type(2) {\\n    overflow: hidden; }\\n.who-are-we:nth-of-type(3) {\\n    margin-top: 70px;\\n    background: #eee; }\\n@media (max-width: 980px) {\\n      .who-are-we:nth-of-type(3) {\\n        margin-top: 0; } }\\n.who-are-we:nth-of-type(3) .who-are-we__article {\\n      width: 65%;\\n      margin-bottom: 20px; }\\n@media (max-width: 980px) {\\n        .who-are-we:nth-of-type(3) .who-are-we__article {\\n          width: 100%; } }\\n.who-are-we:nth-of-type(3) .who-are-we__img-app {\\n      position: absolute;\\n      width: 30%;\\n      max-width: 319px;\\n      box-shadow: 5px 5px 130px #aaa;\\n      right: 0;\\n      top: -65px; }\\n@media (max-width: 980px) {\\n        .who-are-we:nth-of-type(3) .who-are-we__img-app {\\n          position: relative;\\n          width: 100%;\\n          top: 0;\\n          margin-bottom: 30px; } }\\n.who-are-we .who-are-we__reasons {\\n    text-align: center;\\n    margin-top: 20px;\\n    margin-bottom: 70px; }\\n.who-are-we .who-are-we__reasons .who-are-we__reason {\\n      width: 250px;\\n      float: left;\\n      margin-right: 110px; }\\n@media (max-width: 980px) {\\n        .who-are-we .who-are-we__reasons .who-are-we__reason {\\n          display: block;\\n          width: 100%;\\n          margin-bottom: 50px; } }\\n.who-are-we .who-are-we__reasons .who-are-we__reason:nth-child(3) {\\n        margin-right: 0; }\\n.who-are-we .who-are-we__reasons .who-are-we__reason .who-are-we__icon {\\n        font-size: 6em;\\n        color: #ffbb00; }\\n.who-are-we .who-are-we__reasons .who-are-we__reason .who-are-we__reason-title {\\n        font-size: 1.5em;\\n        font-weight: bold;\\n        margin: 15px 0; }\\n.who-are-we .who-are-we__reasons .who-are-we__reason .who-are-we__reason-parag {\\n        line-height: 25px; }\\n.who-are-we .who-are-we__title {\\n    font-size: 2em;\\n    margin-bottom: 20px;\\n    font-weight: bold; }\\n.who-are-we .who-are-we__parag {\\n    font-size: 1.2em;\\n    line-height: 25px;\\n    text-align: justify; }\\n.who-are-we .who-are-we__store {\\n    display: inline-block;\\n    margin-right: 10px; }\\n.who-are-we .who-are-we__store .who-are-we__img-store {\\n      width: 175px; }\\n.contact {\\n  margin-top: 35px;\\n  padding: 20px 0; }\\n.contact .contact__title {\\n    font-size: 2em;\\n    margin-bottom: 20px;\\n    font-weight: bold; }\\n.contact .footer__span {\\n    font-size: 1.2em; }\\n@-webkit-keyframes text-appears {\\n  0% {\\n    left: -200px;\\n    opacity: 0; }\\n  100% {\\n    left: 0px;\\n    opacity: 1; } }\\n@keyframes text-appears {\\n  0% {\\n    left: -200px;\\n    opacity: 0; }\\n  100% {\\n    left: 0px;\\n    opacity: 1; } }\\n/*# sourceMappingURL=home.component.css.map */\\n\"","module.exports = \"<section class=\\\"welcome\\\">\\n    <video class=\\\"welcome__video\\\" src=\\\"assets\\\\video\\\\bg-header-teste.mp4\\\" autoplay zloop></video>\\n    <div class=\\\"welcom__bg-mobile\\\">\\n        <span class=\\\"welcome__msg\\\">Um jeito mais fácil <br> de curtir seu happy hour</span>\\n    </div>\\n</section>\\n\\n<section class=\\\"who-are-we\\\">\\n    <div class=\\\"centralizer\\\">\\n        <h2 class=\\\"who-are-we__title\\\">Para bares</h2>\\n        <article class=\\\"who-are-we__article\\\">\\n            <p class=\\\"who-are-we__parag\\\">Somos uma startup criada com o objetivo ut perspiciatis unde omnis iste natus error sit voluptatem accusantium\\n                doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto\\n                beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut\\n                fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. </p>\\n        </article>\\n        <ul class=\\\"who-are-we__reasons\\\">\\n            <li class=\\\"who-are-we__reason\\\">\\n                <i class=\\\"fa fa-mobile who-are-we__icon\\\" aria-hidden=\\\"true\\\"></i>\\n                <h3 class=\\\"who-are-we__reason-title\\\">Pedidos pelo Smartphone</h3>\\n                <article class=\\\"who-are-we__reason-article\\\">\\n                    <p class=\\\"who-are-we__reason-parag\\\">Faça seu pedido direto pelo APP e evite confusões no pedido.</p>\\n                </article>\\n            </li>\\n            <li class=\\\"who-are-we__reason\\\">\\n                <i class=\\\"fa fa-users who-are-we__icon\\\" aria-hidden=\\\"true\\\"></i>\\n                <h3 class=\\\"who-are-we__reason-title\\\">Motivo 2</h3>\\n                <article class=\\\"who-are-we__reason-article\\\">\\n                    <p class=\\\"who-are-we__reason-parag\\\">Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit.</p>\\n                </article>\\n            </li>\\n            <li class=\\\"who-are-we__reason\\\">\\n                <i class=\\\"fa fa-credit-card-alt who-are-we__icon\\\" aria-hidden=\\\"true\\\"></i>\\n                <h3 class=\\\"who-are-we__reason-title\\\">Facilidade no Pagamento</h3>\\n                <article class=\\\"who-are-we__reason-article\\\">\\n                    <p class=\\\"who-are-we__reason-parag\\\">Evite filas e transtornos na hora de pagar a conta, com ServeJá você paga a conta sem tirar a carteira do bolso.</p>\\n                </article>\\n            </li>\\n        </ul>\\n    </div>\\n</section>\\n\\n<section class=\\\"who-are-we\\\">\\n    <div class=\\\"centralizer\\\">\\n        <h2 class=\\\"who-are-we__title\\\">Para amantes de happy hour</h2>\\n        <article class=\\\"who-are-we__article\\\">\\n            <p class=\\\"who-are-we__parag\\\">Somos uma startup criada com o objetivo ut perspiciatis unde omnis iste natus error sit voluptatem accusantium\\n                doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto\\n                beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut\\n                fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Somos uma startup\\n                criada com o objetivo ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque\\n                laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae\\n                vitae dicta sunt explicabo.</p>\\n        </article>\\n        <img class=\\\"who-are-we__img-app\\\" ng-src=\\\"files\\\\img\\\\img-app.png\\\" class=\\\"md-avatar\\\" alt=\\\"Imagem do aplicativo Servejá\\\" />\\n        <h2 class=\\\"who-are-we__title\\\">Baixe agora o app</h2>\\n        <ul class=\\\"who-are-we__stores\\\">\\n            <li class=\\\"who-are-we__store\\\">\\n                <a href=\\\"\\\" class=\\\"who-are-we__link\\\">\\n                    <img src=\\\"https://imagepng.org/wp-content/uploads/2017/06/baixar-na-app-store-botao-4.png\\\" alt=\\\"\\\" class=\\\"who-are-we__img-store\\\">\\n                </a>\\n            </li>\\n            <li class=\\\"who-are-we__store\\\">\\n                <a href=\\\"\\\" class=\\\"who-are-we__link\\\">\\n                    <img src=\\\"https://duo.google.com/images/store-badges/play/pt-BR_badge_web_generic.png\\\" alt=\\\"\\\" class=\\\"who-are-we__img-store\\\">\\n                </a>\\n            </li>\\n        </ul>\\n    </div>\\n</section>\\n\\n<section class=\\\"contact\\\">\\n    <div class=\\\"centralizer\\\">\\n        <h2 class=\\\"contact__title\\\">Tem alguma dúvida?</h2>\\n        <span>Entre em contato no número (xx) xxxxx-xxxx ou por e-mail no\\n                <strong>serveja_suport@serveja.com.br</strong>\\n            </span>\\n    </div>\\n</section>\\n\\n<footer class=\\\"footer\\\">\\n    <div class=\\\"centralizer\\\">\\n        <span class=\\\"footer__span\\\">ServeJá 2018 - Todos os direitos reservados</span>\\n    </div>\\n</footer>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n    constructor() {}\n\n    ngOnInit() {}\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  menu works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<h2 mat-dialog-title>Login</h2>\\n<form [formGroup]=\\\"_myForm\\\" (submit)=\\\"loginAction(); false;\\\">\\n    <mat-dialog-content align=\\\"center\\\">\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>E-mail</mat-label>\\n            <input matInput\\n                   [(ngModel)]=\\\"_email\\\"\\n                   name=\\\"email\\\"\\n\\n                   [errorStateMatcher]=\\\"matcher\\\"\\n                   formControlName=\\\"email\\\"\\n                   [formControl]=\\\"_myForm.controls.email\\\"\\n                   placeholder=\\\"Entre com seu e-mail\\\"\\n                   required>\\n            <mat-icon matSuffix>person</mat-icon>\\n\\n            <mat-error *ngIf=\\\"_myForm.controls.email.hasError('email')\\\">\\n                Digite um e-mail válido\\n            </mat-error>\\n            <mat-error *ngIf=\\\"_myForm.controls.email.hasError('required')\\\">\\n                Este campo é obrigatório\\n            </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>Senha</mat-label>\\n            <input matInput\\n                   [(ngModel)]=\\\"_password\\\"\\n                   type=\\\"password\\\"\\n                   name=\\\"password\\\"\\n\\n                   formControlName=\\\"password\\\"\\n                   [formControl]=\\\"_myForm.controls.password\\\"\\n                   placeholder=\\\"Entre com sua senha\\\">\\n            <mat-icon matSuffix>vpn_key</mat-icon>\\n\\n            <mat-error *ngIf=\\\"_myForm.controls.password.hasError('required')\\\">\\n                Este campo é obrigatório\\n            </mat-error>\\n        </mat-form-field>\\n    </mat-dialog-content>\\n\\n    <mat-dialog-actions align=\\\"end\\\">\\n        <button mat-button\\n                mat-dialog-close>Cancelar</button>\\n        <button mat-button\\n                [type]=\\\"submit\\\"\\n                [disabled]=\\\"_myForm.invalid\\\">GO!</button>\\n    </mat-dialog-actions>\\n</form>\\n\"","module.exports = \"/*Variable*/\\n/*Google*/\\n.my-toolbar-icon {\\n  padding: 0 14px; }\\n.my-toolbar-spacer {\\n  flex: 1 1 auto; }\\n.mat-form-field {\\n  width: 100%; }\\n/*Google*/\\n.pac-container {\\n  width: 100%; }\\n.pac-icon {\\n  display: none; }\\n.pac-item {\\n  border: none; }\\n/*Toolbar*/\\n.mat-icon {\\n  margin-top: -3px; }\\n.menuVertical {\\n  display: none !important; }\\n@media (max-width: 815px) {\\n  .menuHorizontal {\\n    display: none !important; }\\n\\n  .menuVertical {\\n    display: flex !important; } }\\n/*# sourceMappingURL=my-toolbar.component.css.map */\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row *ngIf=\\\"!_authService.loggedIn()\\\">\\n        <span>ServeJá</span>\\n        <span class=\\\"my-toolbar-spacer\\\"></span>\\n        <button mat-button (click)=\\\"openSignUpDialog()\\\">CADASTRE-SE</button>\\n        <button mat-button (click)=\\\"openLoginDialog()\\\">ENTRAR</button>\\n    </mat-toolbar-row>\\n\\n    <mat-toolbar-row class=\\\"menuHorizontal\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\n        <span>ServeJá</span>\\n        <span class=\\\"my-toolbar-spacer\\\"></span>\\n\\n        <button mat-button routerLink=\\\"/dashboard\\\">\\n            <mat-icon aria-label=\\\"home\\\">home</mat-icon>\\n            HOME\\n        </button>\\n        <button mat-button routerLink=\\\"/order\\\">\\n            <mat-icon aria-label=\\\"home\\\">reorder</mat-icon>\\n            PEDIDOS\\n        </button>\\n        <button mat-button routerLink=\\\"/menu\\\">\\n            <mat-icon aria-label=\\\"home\\\">restaurant_menu</mat-icon>\\n            CARDÁPIOS\\n        </button>\\n        <button mat-button routerLink=\\\"/waiter\\\">\\n            <mat-icon aria-label=\\\"home\\\">fastfood</mat-icon>\\n            GARÇONS\\n        </button>\\n        <button mat-button routerLink=\\\"/table\\\">\\n            <mat-icon aria-label=\\\"home\\\">table_chart</mat-icon>\\n            MESAS\\n        </button>\\n        <button mat-button routerLink=\\\"/profile\\\">\\n            <mat-icon aria-label=\\\"home\\\">person</mat-icon>\\n            PERFIL\\n        </button>\\n        <button mat-button (click)=\\\"_authService.logout()\\\">\\n            <mat-icon aria-label=\\\"home\\\">power_settings_new</mat-icon>\\n            SAIR\\n        </button>\\n    </mat-toolbar-row>\\n\\n    <mat-toolbar-row class=\\\"menuVertical\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\n        <span>ServeJá</span>\\n        <span class=\\\"my-toolbar-spacer\\\"></span>\\n\\n        <button mat-button [matMenuTriggerFor]=\\\"menu\\\">\\n            <mat-icon aria-label=\\\"menu\\\">menu</mat-icon>\\n        </button>\\n        <mat-menu #menu=\\\"matMenu\\\">\\n            <button mat-menu-item routerLink=\\\"/dashboard\\\">\\n                <mat-icon aria-label=\\\"home\\\">home</mat-icon>\\n                HOME\\n            </button>\\n            <button mat-menu-item routerLink=\\\"/order\\\">\\n                <mat-icon aria-label=\\\"home\\\">reorder</mat-icon>\\n                PEDIDOS\\n            </button>\\n            <button mat-menu-item routerLink=\\\"/menu\\\">\\n                <mat-icon aria-label=\\\"home\\\">restaurant_menu</mat-icon>\\n                CARDÁPIOS\\n            </button>\\n            <button mat-menu-item routerLink=\\\"/waiter\\\">\\n                <mat-icon aria-label=\\\"home\\\">fastfood</mat-icon>\\n                GARÇONS\\n            </button>\\n            <button mat-menu-item routerLink=\\\"/table\\\">\\n                <mat-icon aria-label=\\\"home\\\">table_chart</mat-icon>\\n                MESAS\\n            </button>\\n            <button mat-menu-item routerLink=\\\"/profile\\\">\\n                <mat-icon aria-label=\\\"home\\\">person</mat-icon>\\n                PERFIL\\n            </button>\\n            <button mat-menu-item (click)=\\\"_authService.logout()\\\">\\n                <mat-icon aria-label=\\\"home\\\">power_settings_new</mat-icon>\\n                SAIR\\n            </button>\\n        </mat-menu>\\n    </mat-toolbar-row>\\n</mat-toolbar>\\n\"","import {\n    Component,\n    ElementRef,\n    Inject, NgZone,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from \"@angular/material\";\nimport {MyErrorStateMatcher} from \"../../default.error-matcher\";\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {PlaceService} from \"../../services/place/place.service\";\nimport {Place} from \"../../models/place\";\nimport {HelpersService} from \"../../services/helpers/helpers.service\";\nimport {} from '@types/googlemaps';\nimport {CnpjValidator} from \"../../services/validators/cnpj.validator\";\nimport {forkJoin} from \"rxjs/internal/observable/forkJoin\";\nimport {AuthService} from \"../../services/auth/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {ProfileComponent} from \"../profile/profile.component\";\n\n@Component({\n    selector: 'app-my-toolbar',\n    templateUrl: './my-toolbar.component.html',\n    styleUrls: ['./my-toolbar.component.css'],\n    encapsulation : ViewEncapsulation.None\n})\nexport class MyToolbarComponent {\n    constructor(private _dialog: MatDialog,\n                private _authService : AuthService) {}\n\n    openLoginDialog(): void {\n        this._dialog.open(LoginDialogComponent, {\n            width: '500px',\n            data: {},\n            disableClose : true\n        })\n            .afterClosed().subscribe(result => {});\n    }\n\n    openSignUpDialog(): void {\n        this._dialog.open(SignUpDialogComponent, {\n            width: '500px',\n            data: {},\n            disableClose : true\n        })\n            .afterClosed().subscribe(result => {});\n    }\n}\n\n@Component({\n    selector: 'login-dialog',\n    templateUrl: 'loginDialog.html',\n})\nexport class LoginDialogComponent {\n    matcher = new MyErrorStateMatcher();\n\n    private _email : string;\n    private _password : string;\n    private _myForm : FormGroup;\n\n    constructor(\n        public dialogRef: MatDialogRef<LoginDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        formBuilder : FormBuilder,\n        private _placeService : PlaceService,\n        private _authService : AuthService,\n        private _router : Router,\n        private _ngZone : NgZone) {\n        this._myForm = formBuilder.group({\n            email : new FormControl('', [\n                Validators.required,\n                Validators.email\n            ]),\n            password : new FormControl('', [\n                Validators.required\n            ])\n        });\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    loginAction(){\n        this._authService.doLogin(this._email, this._password)\n            .subscribe((data : any) => {\n                data.status ? this.onNoClick() : false;\n            });\n    }\n}\n\n@Component({\n    selector: 'sign-up-dialog',\n    templateUrl: 'signUpDialog.html',\n    styleUrls: ['./my-toolbar.component.css']\n})\nexport class SignUpDialogComponent {\n    matcher = new MyErrorStateMatcher();\n\n    private _place : Place = new Place();\n    public listState : Array<string> = [\n        'SP',\n        'AC',\n        'AL',\n        'AM',\n        'AP',\n        'BA',\n        'CE',\n        'DF',\n        'ES',\n        'GO',\n        'MA',\n        'MG',\n        'MS',\n        'MT',\n        'PA',\n        'PB',\n        'PE',\n        'PI',\n        'PR',\n        'RJ',\n        'RN',\n        'RO',\n        'RR',\n        'RS',\n        'SC',\n        'SE',\n        'TO'\n    ];\n    private _repeatPassword : String;\n    private _myForm : FormGroup;\n    private _addressInfo : any;\n    public formBuilder : FormBuilder;\n\n    public hide : boolean = true;\n    public hide2 : boolean = true;\n\n    @ViewChild('search') public searchElementRef: ElementRef;\n    @ViewChild('email') public email: ElementRef;\n    @ViewChild('cnpj') public cnpj: ElementRef;\n    private _autoComplete;\n\n    constructor(\n        public dialogRef: MatDialogRef<SignUpDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        formBuilder : FormBuilder,\n        private _placeService : PlaceService,\n        private _helpers : HelpersService,\n        private _authService : AuthService) {\n        this._myForm = formBuilder.group({\n            placeName : new FormControl('', [\n                Validators.required\n            ]),\n            email : new FormControl('', [\n                Validators.required,\n                Validators.email\n            ]),\n            password : new FormControl('', [\n                Validators.compose([\n                    Validators.required,\n                    Validators.minLength(8)\n                ])\n            ]),\n            repeatPassword : new FormControl('', [\n                Validators.required,\n                this.matchPassword\n            ]),\n            cnpj : new FormControl('', [\n                Validators.required,\n                CnpjValidator.validCNPJ\n            ]),\n            zipCode : new FormControl('', [\n                Validators.required,\n                Validators.minLength(8)\n            ]),\n            street : new FormControl('', [\n                Validators.required\n            ]),\n            number : new FormControl('', []),\n            complement : new FormControl('', []),\n            neighborhood : new FormControl('', [\n                Validators.required\n            ]),\n            city : new FormControl('', [\n                Validators.required\n            ]),\n            state : new FormControl('', []),\n        });\n    }\n\n    ngOnInit() {\n        this.autoComplete();\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    signUpAction(){\n        this.validateExistFields()\n            .subscribe((results : any) => {\n                !results[0].status ?\n                    (this._myForm.controls['cnpj'].setErrors({\n                        usedCNPJ : true\n                    }), this.cnpj.nativeElement.focus()) :\n\n                    !results[1].status ?\n                        (this._myForm.controls['email'].setErrors({\n                            usedEmail : true\n                        }), this.email.nativeElement.focus()) :\n\n                        this.signUpAfterValidation();\n\n            }, () => this._helpers.openSnackBar('Algo deu errado! Tente novamente', 'OK'));\n    }\n\n    signUpAfterValidation(){\n        this._authService.doSignUp(this._place)\n            .subscribe(data => {\n                data.status ? this.onNoClick() : false;\n            })\n    }\n\n    validateExistFields(){\n        return forkJoin([\n            this._placeService.cnpjValidate(this._place.cnpj),\n            this._placeService.emailValidate(this._place.email)\n        ]);\n    }\n\n    zipCodeChange(){\n        this._helpers.codeAddress(this._place.zipCode)\n            .subscribe((value : any) => {\n                this._place.loc = [value[0].geometry.location.lng(), value[0].geometry.location.lat()];\n\n                this._helpers.getAddressInfo(this._place.zipCode)\n                    .subscribe(value => {\n                        this._place.street = value.logradouro;\n                        /*this._place.complement = value.complemento;*/\n                        this._place.neighborhood = value.bairro;\n                        this._place.city = value.localidade;\n                        this._place.state = value.uf;\n\n                    }, () => {\n                        this._myForm.controls['zipCode'].setErrors({\n                            invalid : true\n                        });\n                    })\n            }, () => {\n                this._myForm.controls['zipCode'].setErrors({\n                    invalid : true\n                });\n            });\n    }\n\n    matchPassword(input: AbstractControl) : { [key: string]: any }{\n        return !input.root || !(<FormGroup>input.root).controls ?\n            null :\n            input.value !== (<FormGroup>input.root).controls.password.value ?\n                {mismatchedPassword : true} :\n                null;\n    }\n\n    autoComplete(){\n        this._autoComplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement, {\n            types: ['establishment'],\n            componentRestrictions: {\n                country: 'br'\n            }\n        });\n\n        this._autoComplete.addListener('place_changed', () => {\n            let place: google.maps.places.PlaceResult = this._autoComplete.getPlace();\n\n            this._place.namePlace = place.name;\n\n            place.address_components[place.address_components.length -1].long_name ?\n                (this._place.zipCode = place.address_components[place.address_components.length -1]\n                    .long_name\n                    .replace('-', ''), this.zipCodeChange()) : false;\n\n            this.email.nativeElement.focus();\n        });\n    }\n}\n","module.exports = \"<h2 mat-dialog-title>Cadastrar-se</h2>\\n\\n<!--AUTOCOMPLETE-->\\n<form [formGroup]=\\\"_myForm\\\" (submit)=\\\"signUpAction(); false;\\\">\\n    <mat-dialog-content align=\\\"center\\\">\\n        <!--SEARCH-->\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>Pesquise um estabelicimento</mat-label>\\n            <input matInput\\n                   #search\\n                   placeholder=\\\"Pesquise um estabelicimento\\\">\\n            <mat-icon matSuffix mat-icon-button (click)=\\\"search.value=''\\\">close</mat-icon>\\n        </mat-form-field>\\n\\n        <!--NAME-->\\n        <mat-form-field>\\n            <mat-label>Nome do Estabelecimento</mat-label>\\n            <input matInput\\n                   formControlName=\\\"placeName\\\"\\n                   [(ngModel)]=\\\"_place.namePlace\\\"\\n\\n                   [errorStateMatcher]=\\\"matcher\\\"\\n                   [formControl]=\\\"_myForm.controls.placeName\\\"\\n                   placeholder=\\\"Nome do estabelecimento\\\">\\n\\n            <mat-error *ngIf=\\\"_myForm.controls.placeName.hasError('required')\\\">\\n                Este campo é obrigatório\\n            </mat-error>\\n        </mat-form-field>\\n\\n        <!--EMAIL-->\\n        <mat-form-field>\\n            <mat-label>E-mail</mat-label>\\n            <input matInput\\n                   formControlName=\\\"email\\\"\\n                   [(ngModel)]=\\\"_place.email\\\"\\n\\n                   #email\\n\\n                   [errorStateMatcher]=\\\"matcher\\\"\\n                   [formControl]=\\\"_myForm.controls.email\\\"\\n                   placeholder=\\\"Entre com seu e-mail\\\">\\n\\n            <mat-error *ngIf=\\\"_myForm.controls.email.hasError('email')\\\">\\n                Digite um e-mail válido\\n            </mat-error>\\n            <mat-error *ngIf=\\\"_myForm.controls.email.hasError('required')\\\">\\n                Este campo é obrigatório\\n            </mat-error>\\n            <mat-error *ngIf=\\\"_myForm.controls.email.hasError('usedEmail')\\\">\\n                Este e-mail já foi usado para outra conta\\n            </mat-error>\\n        </mat-form-field>\\n\\n        <!--PASSWORD-->\\n        <mat-form-field>\\n            <mat-label>Senha</mat-label>\\n            <input matInput\\n                   formControlName=\\\"password\\\"\\n                   [(ngModel)]=\\\"_place.password\\\"\\n                   [type]=\\\"hide ? 'password' : 'text'\\\"\\n\\n                   [errorStateMatcher]=\\\"matcher\\\"\\n                   [formControl]=\\\"_myForm.controls.password\\\"\\n                   placeholder=\\\"Entre com sua senha\\\">\\n\\n            <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n\\n            <mat-error *ngIf=\\\"_myForm.controls.password.hasError('required')\\\">\\n                Este campo é obrigatório\\n            </mat-error>\\n            <mat-error *ngIf=\\\"_myForm.controls.password.hasError('minlength')\\\">\\n                Este campo deve ter no mínimo 8 caracteres\\n            </mat-error>\\n        </mat-form-field>\\n\\n        <!--REPEAT PASSWORD-->\\n        <mat-form-field>\\n            <mat-label>Repetir Senha</mat-label>\\n            <input matInput\\n                   formControlName=\\\"repeatPassword\\\"\\n                   [(ngModel)]=\\\"_repeatPassword\\\"\\n                   type=\\\"password\\\"\\n                   [type]=\\\"hide2 ? 'password' : 'text'\\\"\\n\\n                   [errorStateMatcher]=\\\"matcher\\\"\\n                   [formControl]=\\\"_myForm.controls.repeatPassword\\\"\\n                   placeholder=\\\"Entre com sua senha\\\">\\n\\n            <mat-icon matSuffix (click)=\\\"hide2 = !hide2\\\">{{hide2 ? 'visibility' : 'visibility_off'}}</mat-icon>\\n\\n            <mat-error *ngIf=\\\"_myForm.controls.repeatPassword.hasError('required')\\\">\\n                Este campo é obrigatório\\n            </mat-error>\\n            <mat-error *ngIf=\\\"_myForm.controls.repeatPassword.hasError('mismatchedPassword')\\\">\\n                Senhas diferente\\n            </mat-error>\\n        </mat-form-field>\\n\\n        <!--CNPJ-->\\n        <mat-form-field>\\n            <mat-label>CNPJ</mat-label>\\n            <input matInput\\n                   formControlName=\\\"cnpj\\\"\\n                   [(ngModel)]=\\\"_place.cnpj\\\"\\n\\n                   #cnpj\\n\\n                   [dropSpecialCharacters]=\\\"true\\\"\\n                   mask='00.000.000/0000-00'\\n\\n                   [errorStateMatcher]=\\\"matcher\\\"\\n                   [formControl]=\\\"_myForm.controls.cnpj\\\"\\n                   placeholder=\\\"CNPJ\\\">\\n\\n            <mat-error *ngIf=\\\"_myForm.controls.cnpj.hasError('required')\\\">\\n                Este campo é obrigatório\\n            </mat-error>\\n            <mat-error *ngIf=\\\"_myForm.controls.cnpj.hasError('validCNPJ')\\\">\\n                CNPJ inválido\\n            </mat-error>\\n            <mat-error *ngIf=\\\"_myForm.controls.cnpj.hasError('usedCNPJ')\\\">\\n                Este CNPJ já foi usado para outra conta\\n            </mat-error>\\n        </mat-form-field>\\n\\n        <!--CEP-->\\n        <mat-form-field>\\n            <mat-label>CEP</mat-label>\\n            <input matInput\\n                   formControlName=\\\"zipCode\\\"\\n                   [(ngModel)]=\\\"_place.zipCode\\\"\\n                   (change)=\\\"zipCodeChange()\\\"\\n\\n                   [dropSpecialCharacters]=\\\"true\\\"\\n                   mask='00000-000'\\n\\n                   [errorStateMatcher]=\\\"matcher\\\"\\n                   [formControl]=\\\"_myForm.controls.zipCode\\\"\\n                   placeholder=\\\"CEP\\\">\\n\\n            <mat-error *ngIf=\\\"_myForm.controls.zipCode.hasError('required')\\\">\\n                Este campo é obrigatório\\n            </mat-error>\\n            <mat-error *ngIf=\\\"_myForm.controls.zipCode.hasError('invalid')\\\">\\n                CEP incorreto, digite um CEP válido\\n            </mat-error>\\n            <mat-error *ngIf=\\\"_myForm.controls.zipCode.hasError('minLength')\\\">\\n                CEP deve ter no Mínimo 8 caracteres\\n            </mat-error>\\n        </mat-form-field>\\n\\n        <!--STREET-->\\n        <mat-form-field>\\n            <mat-label>Rua</mat-label>\\n            <input matInput\\n                   formControlName=\\\"street\\\"\\n                   [(ngModel)]=\\\"_place.street\\\"\\n\\n                   [errorStateMatcher]=\\\"matcher\\\"\\n                   [formControl]=\\\"_myForm.controls.street\\\"\\n                   placeholder=\\\"Rua\\\">\\n\\n            <mat-error *ngIf=\\\"_myForm.controls.street.hasError('required')\\\">\\n                Este campo é obrigatório\\n            </mat-error>\\n        </mat-form-field>\\n\\n        <!--NUMBER-->\\n        <mat-form-field>\\n            <mat-label>Nº</mat-label>\\n            <input matInput\\n                   [(ngModel)]=\\\"_place.number\\\"\\n\\n                   [errorStateMatcher]=\\\"matcher\\\"\\n                   formControlName=\\\"number\\\">\\n        </mat-form-field>\\n\\n        <!--COMPLEMENT-->\\n        <mat-form-field>\\n            <mat-label>Complemento</mat-label>\\n            <input matInput\\n                   [(ngModel)]=\\\"_place.complement\\\"\\n\\n                   [errorStateMatcher]=\\\"matcher\\\"\\n                   formControlName=\\\"complement\\\">\\n        </mat-form-field>\\n\\n        <!--NEIGHBORHOOD-->\\n        <mat-form-field>\\n            <mat-label>Bairro</mat-label>\\n            <input matInput\\n                   formControlName=\\\"neighborhood\\\"\\n                   [(ngModel)]=\\\"_place.neighborhood\\\"\\n\\n                   [errorStateMatcher]=\\\"matcher\\\"\\n                   [formControl]=\\\"_myForm.controls.neighborhood\\\"\\n                   placeholder=\\\"Bairro\\\">\\n\\n            <mat-error *ngIf=\\\"_myForm.controls.neighborhood.hasError('required')\\\">\\n                Este campo é obrigatório\\n            </mat-error>\\n        </mat-form-field>\\n\\n        <!--CITY-->\\n        <mat-form-field>\\n            <mat-label>Cidade</mat-label>\\n            <input matInput\\n                   formControlName=\\\"city\\\"\\n                   [(ngModel)]=\\\"_place.city\\\"\\n\\n                   [errorStateMatcher]=\\\"matcher\\\"\\n                   [formControl]=\\\"_myForm.controls.city\\\"\\n                   placeholder=\\\"Cidade\\\">\\n\\n            <mat-error *ngIf=\\\"_myForm.controls.city.hasError('required')\\\">\\n                Este campo é obrigatório\\n            </mat-error>\\n        </mat-form-field>\\n\\n        <!--STATE-->\\n        <mat-form-field>\\n            <mat-label>UF</mat-label>\\n            <mat-select [(ngModel)]=\\\"_place.state\\\"\\n\\n                        [errorStateMatcher]=\\\"matcher\\\"\\n                        formControlName=\\\"state\\\">\\n                <mat-option *ngFor=\\\"let data of listState\\\" [value]=\\\"data\\\">\\n                    {{data}}\\n                </mat-option>\\n            </mat-select>\\n        </mat-form-field>\\n    </mat-dialog-content>\\n\\n    <mat-dialog-actions align=\\\"end\\\">\\n        <button mat-button\\n                mat-dialog-close>Cancelar</button>\\n        <button mat-button\\n                [type]=\\\"submit\\\"\\n                [disabled]=\\\"_myForm.invalid\\\">GO!</button>\\n    </mat-dialog-actions>\\n</form>\\n\"","module.exports = \"\"","module.exports = \"<p>\\n  order works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  profile works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  table works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  waiter works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-waiter',\n  templateUrl: './waiter.component.html',\n  styleUrls: ['./waiter.component.css']\n})\nexport class WaiterComponent implements OnInit {\n    constructor() { }\n\n    ngOnInit() {}\n}\n","import {ErrorStateMatcher} from \"@angular/material\";\nimport {FormControl, FormGroupDirective, NgForm} from \"@angular/forms\";\n\n/** Error when invalid control is dirty or touched*/\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return (control && control.invalid && (control.dirty || control.touched));\n    }\n}\n","export class Place {\n    namePlace : string;\n    email: string;\n    password : string;\n    hashRecovery : string;\n    cnpj : string;\n    description : string;\n    pageFacebook : string;\n    pageInstagram : string;\n    webSite : string;\n    logoPath : string;\n    headerImgPath : string;\n    zipCode: string;\n    street : string;\n    number : string;\n    complement : string;\n    neighborhood : string;\n    city : string;\n    state : string;\n    loc: PlaceLoc;\n    sunday : PlaceFunction;\n    monday : PlaceFunction;\n    tuesday : PlaceFunction;\n    wednesday : PlaceFunction;\n    thursday : PlaceFunction;\n    friday : PlaceFunction;\n    saturday : PlaceFunction;\n}\n\nexport class PlaceFunction{\n    constructor(\n        status : boolean,\n        timeStart : string,\n        timeEnd : string,\n        menu : string){}\n}\n\nexport class PlaceLoc{\n    constructor(coordinates: any){}\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable()\nexport class ApiServiceService {\n    private _url : string = 'http://localhost/';\n\n    constructor(public http: HttpClient) {}\n\n    get url(){\n        return this._url;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {Place} from \"../../models/place\";\nimport {HttpClient, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\nimport {ApiServiceService} from \"../api-service/api-service.service\";\nimport {Observable} from \"rxjs/Observable\";\nimport {catchError, tap} from \"rxjs/operators\";\nimport {HelpersService} from \"../helpers/helpers.service\";\nimport {CanActivate, Router} from \"@angular/router\";\nimport {JwtHelperService} from \"@auth0/angular-jwt\";\nimport {throwError} from \"rxjs/internal/observable/throwError\";\n\n@Injectable()\nexport class AuthService {\n    constructor(private _apiService : ApiServiceService,\n                private _http : HttpClient,\n                private _helpers : HelpersService,\n                private _jwtHelperService : JwtHelperService,\n                private _router: Router) { }\n\n    doLogin(email, password){\n        return this._http\n            .post(this._apiService.url + 'web/doLogin', {email, password})\n            .pipe(\n                tap((data : any) => {\n                    data.status ?\n                        this.setSession(data) :\n                        throwError(this._helpers.openSnackBar(data.message, 'OK'));\n                }),\n                catchError(() : any => this._helpers.openSnackBar('Algo deu errado! Tente novamente', 'OK'))\n            );\n    }\n\n    doSignUp(place : Place){\n        return this._http\n            .post(this._apiService.url + 'web/doSignUp', {place})\n            .pipe(\n                tap((data : any) => {\n                    data.status ?\n                        this.setSession(data) :\n                        throwError(this._helpers.openSnackBar(data.message, 'OK'));\n                }),\n                catchError(() : any => this._helpers.openSnackBar('Algo deu errado! Tente novamente', 'OK'))\n            );\n    }\n\n    setSession(authResult) : void{\n        localStorage.setItem('token', authResult.token);\n        this._router.navigate(['/dashboard']);\n    }\n\n    loggedIn(){\n        return !this._jwtHelperService.isTokenExpired(localStorage.getItem('token'));\n    }\n\n    decodeProfile(){\n        return this._jwtHelperService.decodeToken(localStorage.getItem('token'));\n    }\n\n    logout(){\n        localStorage.removeItem('token');\n        this._router.navigate(['/']);\n    }\n}\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n    intercept(req: HttpRequest<any>,\n              next: HttpHandler): Observable<HttpEvent<any>> {\n\n        return localStorage.getItem('token') ?\n\n            next.handle(req.clone({\n                headers: req.headers.set('Authorization', 'Bearer ' + localStorage.getItem('token'))\n            })) :\n\n            next.handle(req);\n    }\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(private _auth: AuthService,\n                private _router: Router) {}\n\n    canActivate() {\n        return this._auth.loggedIn() ? true : (this._auth.logout(), false);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {} from '@types/googlemaps';\nimport {Observable} from \"rxjs/Observable\";\nimport {Observer} from \"rxjs/Observer\";\nimport {MatSnackBar} from \"@angular/material\";\n\n@Injectable()\nexport class HelpersService {\n    geocoder: google.maps.Geocoder = new google.maps.Geocoder();\n\n    constructor(private _http : HttpClient,\n                public snackBar: MatSnackBar) {}\n\n    /*\n    * Google Maps\n    * */\n    geocode(latLng: google.maps.LatLng): Observable<google.maps.GeocoderResult[]> {\n        return Observable.create((observer: Observer<google.maps.GeocoderResult[]>) => {\n            // Invokes geocode method of Google Maps API geocoding.\n            this.geocoder.geocode({ location: latLng }, (\n                (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n                    if (status === google.maps.GeocoderStatus.OK) {\n                        observer.next(results);\n                        observer.complete();\n                    } else {\n                        console.log('Geocoding service: geocoder failed due to: ' + status);\n                        observer.error(status);\n                    }\n                })\n            );\n        });\n    }\n\n    codeAddress(address: string): Observable<google.maps.GeocoderResult[]> {\n        return Observable.create((observer: Observer<google.maps.GeocoderResult[]>) => {\n            // Invokes geocode method of Google Maps API geocoding.\n            this.geocoder.geocode({ address: address }, (\n                (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n                    if (status === google.maps.GeocoderStatus.OK) {\n                        observer.next(results);\n                        observer.complete();\n                    } else {\n                        observer.error(status);\n                    }\n                })\n            );\n        });\n    }\n\n    getCurrentPosition(): Observable<Position> {\n        return Observable.create((observer: Observer<Position>) => {\n            // Invokes getCurrentPosition method of Geolocation API.\n            navigator.geolocation.getCurrentPosition(\n                (position: Position) => {\n                    observer.next(position);\n                    observer.complete();\n                },\n                (error: PositionError) => {\n                    console.log('Geolocation service: ' + error.message);\n                    observer.error(error);\n                }\n            );\n        });\n    }\n\n    /*\n    * Via CEP\n    * */\n    getAddressInfo(zipCode) : any {\n        return this._http.get('https://viacep.com.br/ws/'+zipCode+'/json/');\n    }\n\n    /*\n    * Snack Bar\n    * */\n    openSnackBar(content : string, action: string) {\n        this.snackBar.open(content, action, {\n            duration: 4000\n        });\n    }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport {ApiServiceService} from \"../api-service/api-service.service\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Place} from \"../../models/place\";\n\n@Injectable()\nexport class PlaceService {\n    constructor(private _apiService : ApiServiceService,\n                private _http : HttpClient) {}\n\n    cnpjValidate(cnpj){\n        return this._http\n            .post(this._apiService.url + 'web/cnpjValidation', {cnpj});\n    }\n\n    emailValidate(email){\n        return this._http\n            .post(this._apiService.url + 'web/emailValidation', {email});\n    }\n}\n","import {FormControl} from '@angular/forms';\n\nexport class CnpjValidator {\n    static validCNPJ(input: FormControl): {[key: string]: boolean} {\n        const STRICT_STRIP_REGEX = /[-\\/.]/g;\n        const LOOSE_STRIP_REGEX = /[^\\d]/g;\n        const BLACKLIST = [\n            \"00000000000000\",\n            \"11111111111111\",\n            \"22222222222222\",\n            \"33333333333333\",\n            \"44444444444444\",\n            \"55555555555555\",\n            \"66666666666666\",\n            \"77777777777777\",\n            \"88888888888888\",\n            \"99999999999999\"\n        ];\n        const stripped = function (number, strict) {\n            const regex = strict ? STRICT_STRIP_REGEX : LOOSE_STRIP_REGEX;\n            return (number || '').toString().replace(regex, '');\n        };\n        const verifierDigit = function(numbers) {\n            let index = 2;\n            const reverse = numbers.split('').reduce(function(buffer, number) {\n                return [parseInt(number, 10)].concat(buffer);\n            }, []);\n\n            const sum = reverse.reduce(function(buffer, number) {\n                buffer += number * index;\n                index = (index === 9 ? 2 : index + 1);\n                return buffer;\n            }, 0);\n\n            const mod = sum % 11;\n            return (mod < 2 ? 0 : 11 - mod);\n        };\n\n        // CNPJ must be defined\n        if (!stripped(input.value, '')) {\n            return ({ validCNPJ : true });\n        }\n\n        // CNPJ must have 14 chars\n        if (stripped(input.value, '').length !== 14) {\n            return ({ validCNPJ : true });\n        }\n\n        // CNPJ can't be blacklisted\n        if (BLACKLIST.includes(stripped(input.value, ''))) {\n            return ({ validCNPJ : true });\n        }\n\n        let numbers = stripped(input.value, '').substr(0, 12);\n        numbers += verifierDigit(numbers);\n        numbers += verifierDigit(numbers);\n\n        return !input ?\n            null :\n            numbers.substr(-2) === stripped(input.value, '').substr(-2) ?\n                null :\n                { validCNPJ : true };\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}